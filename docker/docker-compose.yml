services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      # Port for HOST to connect (e.g., our producer script)
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'

  postgres-db:
    image: postgres:14-alpine
    container_name: postgres-db
    ports:
      - "5432:5432"
    volumes:
      - ../db/init.sql:/docker-entrypoint-initdb.d/init.sql
    env_file:
      - ../.env # Loads credentials from the .env file at the project root

  data-processor:
    container_name: data-processor
    # Tells Docker Compose to build the image from the Dockerfile in proj. root
    build:
      context: ..
      dockerfile: Dockerfile
    # This service will not start until kafka and postgres-db are "healthy"
    depends_on:
      - kafka
      - postgres-db
    # environment variables from the .env file available to this container
    env_file:
      - ../.env