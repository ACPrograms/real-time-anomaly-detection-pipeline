# Render Blueprint Specification v1

databases:
  - name: project-db
    plan: free

services:
  # --- Kafka Stack ---
  - name: zookeeper
    type: pserv
    runtime: docker
    image:
      url: confluentinc/cp-zookeeper:7.5.0
    envVars:
      - key: ZOOKEEPER_CLIENT_PORT
        value: 2181
      - key: ZOOKEEPER_TICK_TIME
        value: 2000

  - name: kafka
    type: pserv
    runtime: docker
    image:
      url: confluentinc/cp-kafka:7.5.0
    envVars:
      - key: KAFKA_BROKER_ID
        value: 1
      - key: KAFKA_ZOOKEEPER_CONNECT
        value: zookeeper:2181
      - key: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
        value: PLAINTEXT:PLAINTEXT
      - key: KAFKA_ADVERTISED_LISTENERS
        value: PLAINTEXT://kafka:9092
      - key: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
        value: 1
      - key: KAFKA_AUTO_CREATE_TOPICS_ENABLE
        value: "true"

  # --- Our Python Application ---
  - name: data-processor
    type: pserv
    runtime: docker
    dockerfilePath: ./Dockerfile
    # FIX: Removed startCommand. The command is now defined by the
    # 'CMD' instruction in our main project Dockerfile.
    envVars:
      - fromGroup: project-secrets
      - key: KAFKA_BOOTSTRAP_SERVERS
        value: kafka:9092

  # --- Monitoring Stack ---
  - name: prometheus
    type: pserv
    runtime: docker
    image:
      url: prom/prometheus:latest
    # FIX: Removed startCommand. We will set this via the Render dashboard's
    # "Command" field during the manual config step.
    disk:
      name: prometheus-data
      mountPath: /prometheus
      sizeGB: 1

  - name: grafana
    type: web
    runtime: docker
    image:
      url: grafana/grafana:latest