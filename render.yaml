# Render Blueprint Specification v1
# This blueprint defines the services and database for the pipeline.
# Secrets are managed separately in a manually created Environment Group.

# Defines the managed PostgreSQL database on Render's free tier.
databases:
  - name: project-db
    plan: free

# Defines the services that make up our application.
services:
  - type: pserv # Zookeeper is a private service for Kafka's use.
    name: zookeeper
    runtime: image
    image:
      url: confluentinc/cp-zookeeper:7.5.0
    envVars:
      - key: ZOOKEEPER_CLIENT_PORT
        value: 2181
      - key: ZOOKEEPER_TICK_TIME
        value: 2000

  - type: pserv # Kafka is a private service that depends on Zookeeper.
    name: kafka
    runtime: image
    image:
      url: confluentinc/cp-kafka:7.5.0
    envVars:
      - key: KAFKA_BROKER_ID
        value: 1
      - key: KAFKA_ZOOKEEPER_CONNECT
        value: zookeeper:2181
      - key: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
        value: PLAINTEXT:PLAINTEXT
      - key: KAFKA_ADVERTISED_LISTENERS
        value: PLAINTEXT://kafka:9092
      - key: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
        value: 1
      - key: KAFKA_AUTO_CREATE_TOPICS_ENABLE
        value: "true"

  - type: worker # Our Python consumer runs as a background worker.
    name: data-processor
    runtime: docker
    dockerfilePath: ./Dockerfile
    # THIS IS THE FIX: Use 'dockerCommand' for a Docker runtime.
    dockerCommand: "python3 -m pipeline.kafka_consumer"
    envVars:
      # THIS IS THE FIX: Reference a pre-existing group.
      - fromGroup: project-secrets
      - key: KAFKA_BOOTSTRAP_SERVERS
        value: kafka:9092
      - key: DATABASE_URL
        fromDatabase:
          name: project-db
          property: connectionString