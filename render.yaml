# Render Blueprint Specification v1
# Final version validated against Render's official examples and syntax.

# Define the managed database instance first.
databases:
  - name: project-db
    plan: free

# Define environment variable groups for secrets.
envVarGroups:
  - name: project-secrets
    envVars:
      - key: SLACK_WEBHOOK_URL
        sync: false # Tells Render not to write the secret value back to this file.
      - key: OPENWEATHER_API_KEY
        sync: false

# Define the application services.
services:
  # --- Kafka Stack ---
  - name: zookeeper
    type: pserv # Private Service
    runtime: docker
    # FIX: The 'image' key should directly specify the image name as a string.
    image: confluentinc/cp-zookeeper:7.5.0
    envVars:
      - key: ZOOKEEPER_CLIENT_PORT
        value: 2181
      - key: ZOOKEEPER_TICK_TIME
        value: 2000

  - name: kafka
    type: pserv
    runtime: docker
    image: confluentinc/cp-kafka:7.5.0
    envVars:
      - key: KAFKA_BROKER_ID
        value: 1
      - key: KAFKA_ZOOKEEPER_CONNECT
        value: zookeeper:2181
      - key: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
        value: PLAINTEXT:PLAINTEXT
      - key: KAFKA_ADVERTISED_LISTENERS
        value: PLAINTEXT://kafka:9092
      - key: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
        value: 1
      - key: KAFKA_AUTO_CREATE_TOPICS_ENABLE
        value: "true"

  # --- Our Python Application (Built from source) ---
  - name: data-processor
    type: pserv
    runtime: docker
    # These keys are correct for building from a local Dockerfile.
    dockerContext: .
    dockerfilePath: Dockerfile
    envVars:
      - fromGroup: project-secrets
      - key: KAFKA_BOOTSTRAP_SERVERS
        value: kafka:9092
      # DATABASE_URL is automatically injected by Render from the 'project-db' database.

  # --- Monitoring Stack ---
  - name: prometheus
    type: pserv
    runtime: docker
    image: prom/prometheus:latest
    dockerCommand: "--config.file=/etc/prometheus/prometheus.yml --storage.tsdb.path=/prometheus"
    disk:
      name: prometheus-data
      mountPath: /prometheus
      sizeGB: 1

  - name: grafana
    type: web # Publicly accessible
    runtime: docker
    image: grafana/grafana:latest
    healthCheckPath: /api/health